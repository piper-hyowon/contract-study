/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Coin, CoinInterface } from "../Coin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mount",
        type: "uint256",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561039a806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063075461721461005157806327e235e31461006f57806340c10f191461008f578063d0679d34146100a4575b600080fd5b6100596100b7565b604051610066919061028e565b60405180910390f35b61008261007d366004610244565b6100c6565b60405161006691906102fd565b6100a261009d366004610265565b6100d8565b005b6100a26100b2366004610265565b610145565b6000546001600160a01b031681565b60016020526000908152604090205481565b6000546001600160a01b031633146100ef57600080fd5b789f4f2726179a224501d762422c946590d91000000000000000811061011457600080fd5b6001600160a01b0382166000908152600160205260408120805483929061013c908490610306565b90915550505050565b33600090815260016020526040902054811115610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e906102c6565b60405180910390fd5b33600090815260016020526040812080548392906101b690849061031e565b90915550506001600160a01b038216600090815260016020526040812080548392906101e3908490610306565b90915550506040517f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459061021c903390859085906102a2565b60405180910390a15050565b80356001600160a01b038116811461023f57600080fd5b919050565b600060208284031215610255578081fd5b61025e82610228565b9392505050565b60008060408385031215610277578081fd5b61028083610228565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526015908201527f496e73756666696369656e742062616c616e63652e0000000000000000000000604082015260600190565b90815260200190565b6000821982111561031957610319610335565b500190565b60008282101561033057610330610335565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d11389caf8bf646c2fb3a09013adf58becf7710c8da323164426affc0df69cfa64736f6c63430008010033";

export class Coin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Coin> {
    return super.deploy(overrides || {}) as Promise<Coin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Coin {
    return super.attach(address) as Coin;
  }
  connect(signer: Signer): Coin__factory {
    return super.connect(signer) as Coin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinInterface {
    return new utils.Interface(_abi) as CoinInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Coin {
    return new Contract(address, _abi, signerOrProvider) as Coin;
  }
}
