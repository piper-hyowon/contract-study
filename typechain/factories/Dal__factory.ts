/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dal, DalInterface } from "../Dal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mount",
        type: "uint256",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eca38038062000eca8339810160408190526200003491620001da565b8151829082906200004d90600390602085019062000081565b5080516200006390600490602084019062000081565b5050600580546001600160a01b031916331790555062000294915050565b8280546200008f9062000241565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600082601f83011262000138578081fd5b81516001600160401b03808211156200015557620001556200027e565b604051601f8301601f19908116603f011681019082821181831017156200018057620001806200027e565b816040528381526020925086838588010111156200019c578485fd5b8491505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d057848385830101525b9695505050505050565b60008060408385031215620001ed578182fd5b82516001600160401b038082111562000204578384fd5b620002128683870162000127565b9350602085015191508082111562000228578283fd5b50620002378582860162000127565b9150509250929050565b6002810460018216806200025657607f821691505b602082108114156200027857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610c2680620002a46000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d7146101e0578063a9059cbb146101f3578063d0679d3414610206578063dd62ed3e14610219576100f5565b8063395093511461019d57806340c10f19146101b057806370a08231146101c557806395d89b41146101d8576100f5565b806318160ddd116100d357806318160ddd1461014d57806323b872dd1461016257806327e235e314610175578063313ce56714610188576100f5565b806306fdde03146100fa5780630754617214610118578063095ea7b31461012d575b600080fd5b61010261022c565b60405161010f919061086a565b60405180910390f35b6101206102be565b60405161010f9190610827565b61014061013b3660046107fe565b6102cd565b60405161010f919061085f565b6101556102ef565b60405161010f9190610b59565b6101406101703660046107c3565b6102f5565b610155610183366004610770565b610323565b610190610335565b60405161010f9190610b62565b6101406101ab3660046107fe565b61033a565b6101c36101be3660046107fe565b610366565b005b6101556101d3366004610770565b6103d3565b6101026103f2565b6101406101ee3660046107fe565b610401565b6101406102013660046107fe565b610452565b6101c36102143660046107fe565b61046a565b610155610227366004610791565b61052a565b60606003805461023b90610b9f565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610b9f565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b5050505050905090565b6005546001600160a01b031681565b6000806102d8610555565b90506102e5818585610559565b5060019392505050565b60025490565b600080610300610555565b905061030d85828561060d565b610318858585610657565b506001949350505050565b60066020526000908152604090205481565b601290565b600080610345610555565b90506102e5818585610357858961052a565b6103619190610b70565b610559565b6005546001600160a01b0316331461037d57600080fd5b789f4f2726179a224501d762422c946590d9100000000000000081106103a257600080fd5b6001600160a01b038216600090815260066020526040812080548392906103ca908490610b70565b90915550505050565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461023b90610b9f565b60008061040c610555565b9050600061041a828661052a565b9050838110156104455760405162461bcd60e51b815260040161043c90610afc565b60405180910390fd5b6103188286868403610559565b60008061045d610555565b90506102e5818585610657565b336000908152600660205260409020548111156104995760405162461bcd60e51b815260040161043c90610a0b565b33600090815260066020526040812080548392906104b8908490610b88565b90915550506001600160a01b038216600090815260066020526040812080548392906104e5908490610b70565b90915550506040517f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459061051e9033908590859061083b565b60405180910390a15050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661057f5760405162461bcd60e51b815260040161043c90610a9f565b6001600160a01b0382166105a55760405162461bcd60e51b815260040161043c9061091a565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610600908590610b59565b60405180910390a3505050565b6000610619848461052a565b9050600019811461065157818110156106445760405162461bcd60e51b815260040161043c90610977565b6106518484848403610559565b50505050565b6001600160a01b03831661067d5760405162461bcd60e51b815260040161043c90610a42565b6001600160a01b0382166106a35760405162461bcd60e51b815260040161043c906108bd565b6106ae838383610754565b6001600160a01b038316600090815260208190526040902054818110156106e75760405162461bcd60e51b815260040161043c906109ae565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610745908690610b59565b60405180910390a36106518484845b505050565b80356001600160a01b03811681146103ed57600080fd5b600060208284031215610781578081fd5b61078a82610759565b9392505050565b600080604083850312156107a3578081fd5b6107ac83610759565b91506107ba60208401610759565b90509250929050565b6000806000606084860312156107d7578081fd5b6107e084610759565b92506107ee60208501610759565b9150604084013590509250925092565b60008060408385031215610810578182fd5b61081983610759565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b6000602080835283518082850152825b818110156108965785810183015185820160400152820161087a565b818111156108a75783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f496e73756666696369656e742062616c616e63652e0000000000000000000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610b8357610b83610bda565b500190565b600082821015610b9a57610b9a610bda565b500390565b600281046001821680610bb357607f821691505b60208210811415610bd457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206d993ea5d3ebd94cdca3be687158afda1c475c1365ad28ab92bc129ed8b10e1164736f6c63430008010033";

export class Dal__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dal> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<Dal>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): Dal {
    return super.attach(address) as Dal;
  }
  connect(signer: Signer): Dal__factory {
    return super.connect(signer) as Dal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DalInterface {
    return new utils.Interface(_abi) as DalInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dal {
    return new Contract(address, _abi, signerOrProvider) as Dal;
  }
}
